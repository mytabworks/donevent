{"version":3,"sources":["index.js"],"names":["onDoneTypeJSX","callback","ms","timeoutReference","withKeyboardCB","typingEventHandlerForChildren","event","type","keyCode","target","which","isInputBlurOrPressEnter","nodeName","typeIsKeyUpUnlessItIsBackspace","FakeEvent","clearTimeout","undefined","setTimeout","onBlur","onKeyUp","onKeyPress","onDoneType","events","Object","keys","reduce","result","key","toLocaleLowerCase"],"mappings":";AAwCO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,WAAA,QAAA,mBAAA,EAxCA,IAAMA,EAAgB,SAACC,GAAUC,IAChCC,EADgCD,EAAK,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,IAAKE,EAAmB,UAAA,OAAA,EAAA,UAAA,QAAA,EAG3DC,EAAgC,SAACC,GAC3BC,IAAAA,EAAiCD,EAAjCC,KAAMC,EAA2BF,EAA3BE,QAASC,EAAkBH,EAAlBG,OAAQC,EAAUJ,EAAVI,MACzBC,EACO,SAATJ,GACqB,aAApBE,EAAOG,WAAwC,KAAZJ,GAA4B,KAAVE,GACpDG,EAA0C,UAATN,GAAgC,IAAZC,EACrDM,EAAY,CAAEP,KAAAA,EAAME,OAAAA,EAAQD,QAAAA,GAM9BG,GAJ0B,mBAAnBP,GAA0C,SAATG,GACxCH,EAAeE,GAGfK,EAKOV,OAJHE,IACAY,aAAaZ,GACbA,OAAmBa,GAEhBf,EAASa,GAGhBD,IAEAV,GAAkBY,aAAaZ,GAEnCA,EAAmBc,WAAW,WAC1BhB,EAASa,GACTX,OAAmBa,GACpBd,KAGA,MAAA,CACHgB,OAAQb,EACRc,QAASd,EACTe,WAAYf,IAIb,QAAA,cAAA,EAAA,IAAMgB,EAAa,WAChBC,IAAAA,EAAStB,EAAA,WAAf,EAAA,WAEOuB,OAAAA,OAAOC,KAAKF,GAAQG,OAAO,SAACC,EAAQC,GAEhCD,OADPA,EAAOC,EAAIC,qBAAuBN,EAAOK,GAClCD,GACR,KANA,QAAA,WAAA","file":"index.js","sourceRoot":"../src/donevent","sourcesContent":["export const onDoneTypeJSX = (callback, ms = 700, withKeyboardCB) => {\n    let timeoutReference;\n\n    const typingEventHandlerForChildren = (event) => {\n        const { type, keyCode, target, which } = event;\n        const isInputBlurOrPressEnter =\n            type === 'blur' ||\n            (target.nodeName !== 'TEXTAREA' && (keyCode === 13 || which === 13));\n        const typeIsKeyUpUnlessItIsBackspace = type === 'keyup' && keyCode !== 8;\n        const FakeEvent = { type, target, keyCode };\n\n        if (typeof withKeyboardCB === 'function' && type !== 'blur') {\n            withKeyboardCB(event);\n        }\n\n        if (isInputBlurOrPressEnter) {\n            if (timeoutReference) {\n                clearTimeout(timeoutReference);\n                timeoutReference = undefined;\n            }\n            return callback(FakeEvent);\n        }\n\n        if (typeIsKeyUpUnlessItIsBackspace) return;\n\n        if (timeoutReference) clearTimeout(timeoutReference);\n\n        timeoutReference = setTimeout(() => {\n            callback(FakeEvent);\n            timeoutReference = undefined;\n        }, ms);\n    };\n\n    return {\n        onBlur: typingEventHandlerForChildren,\n        onKeyUp: typingEventHandlerForChildren,\n        onKeyPress: typingEventHandlerForChildren,\n    };\n};\n\nexport const onDoneType = (...props) => {\n    const events = onDoneTypeJSX(...props)\n\n    return Object.keys(events).reduce((result, key) => {\n        result[key.toLocaleLowerCase()] = events[key]\n        return result\n    }, {})\n}"]}